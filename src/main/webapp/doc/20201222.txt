매일 발표있음

2개월동안 개발환경 구축, 웹 아키텍쳐, jsp/servlet,spring,스프링붓

배치

서버의 시스템은 크게 3개로 이루어져 있다

사용자 인터페이스()화면

업무처리 로직

data : data저장/접근


서버환경 이해 : 
클라이언트/서버 아키텍쳐 1-티어
시스템 내에 클라이언트와 서버 모듈이 공존
확장이 어렵다.

2티어

전용 클라이언트 프로그램 (이필요) - 속도가 빠르다.(병원질료,차트프로그램)

데이터베이스만 공유하고 ui,business 로직은 클라이언트 프로그램 탑제

클라이언트간 통신이 힘듬/보안문제.


3티어
전용 클라 프로그램 - 속도가 빠르다.(온라인게임)
서버를 통해 클라이언트간 통신가능 비지니스 로직
클라이언트 프로그램의 배포의 문제


클라이언트가 프로그램을 업데이트 하지 않았을 경우

서로 다른 버전의 프로그램으로 인한 로직 제어 문제

업데이트를 하지 않을 경우 문제발생?


서버환경의 이해
웹 아키텍쳐
전용 클라이언트 프로그램이없고 -> 웹 브라우저개념으로 통일
클라이언트 화면 제어
server 비지니스 로직 제어
업데이트 된 부분은 서버에만 배포

제한사항 -

부라우저 기능에 의존 ->제한적인 유아이(플랙스 플래시.)
브라우저 기능을 벗어나는 추가기능 사용시 호환성/보안문제.(액티브엑스)
모든 브라우저가 동일한 기능을 제공하지 않음(브라우저별 호환문제,크로스 브라우징)
같은 부라우저의 버전별 호환문제


클라와 웹 배포대상.

웹 서버 정적처리에 최적화
웹서버 클라이언트의 요청을 받아서 결과를 전송
정적자리처리에 최적화 css html js image

웹 어플리케이션 서버 
로직에 의해 동적 컨텐츠를 생산하여 웹 서버에 전달
웹 서버의 역활을 겸함(톰캣)




1교시의 정리
클라이언트 아키텍쳐와 웹 아키텍쳐의 비교

웹 아키텍쳐의 장점

앞으로 개발시 필요한 환경들 (이클립스,톰캣,오라클등)
형상관리의 필요성 이해





.......


html- 하이퍼 텍스트 마크업 랭귀지


web.
월드 와이드 웹
인터넷에 연결된 컴퓨터들을통해 사람들이 정보를 공유할 수 있는 정보 공간

HTTP 프로토콜, 하이퍼텍스트, HTML 형식등을 사용하여 그림과 문자를 교환하는 전송방식

URL을 통해 요청

초기 웹은 정적인 공간, 문서 공유를 위한 목적으로 탄생(웹 페이지)

동적으로 컨텐츠를 생성할 수 있는 Web 프로그래밍 (웹어플리케이션)
환경 등장(applet,jsp,asp,웹 어플리케이션)

웹 페이지->웹 어플리케이션


was

요청을 받은 웹 서버는 동적처리를 웹 어플리케이션 서버에게 위임
was는 처리된 내역을 웹 서버로 전송, 최종적으로 웹 서버가 클라이언트에게 결과전달

서블렛/jsp는 쓰레드방식으로 실행->동시처리 성능이 우수
서블렛 jsp 는 메인 함수를 통해 실행하지 않는다.

메인을 서버가 실행함


[protocol]://[host][:port number][path][filename][/extension][?query string]


http: 80 예약포트




서버 프로그램 구현하기

서블릿 : 자바의 웹 개발 표준 스펙, 스펙에 따라 만들어진 소스. 멀티 쓰레드로 실행

jsp 실행코드인 (java)서블릿의 스크립트 방식의 표준 스펙
jsp는 실행시 서블릿으로 변환되어 실행

웹 컨테이너 : 표준 규약에 따라 구현된 웹 어플리케이션을 관리하고 실행할 수 있는 소프트웨어(톰캣,resin,jboss 등)




서블릿 vs jsp

서블릿: 자바 코드 안에 html

jsp: html 문서 안에 자바코드


정리
웹의 탄생배경

URL을 통한 웹 서버에 요청/응답 과정

자바기반의 웹 프로그래밍 개요(서블릿,jsp)


...................
html- 하이퍼 텍스트 마크업 랭귀지


web.
월드 와이드 웹
인터넷에 연결된 컴퓨터들을통해 사람들이 정보를 공유할 수 있는 정보 공간

HTTP 프로토콜, 하이퍼텍스트, HTML 형식등을 사용하여 그림과 문자를 교환하는 전송방식

URL을 통해 요청

초기 웹은 정적인 공간, 문서 공유를 위한 목적으로 탄생(웹 페이지)

동적으로 컨텐츠를 생성할 수 있는 Web 프로그래밍 (웹어플리케이션)
환경 등장(applet,jsp,asp,웹 어플리케이션)

웹 페이지->웹 어플리케이션


was

요청을 받은 웹 서버는 동적처리를 웹 어플리케이션 서버에게 위임
was는 처리된 내역을 웹 서버로 전송, 최종적으로 웹 서버가 클라이언트에게 결과전달

서블렛/jsp는 쓰레드방식으로 실행->동시처리 성능이 우수
서블렛 jsp 는 메인 함수를 통해 실행하지 않는다.

메인을 서버가 실행함


[protocol]://[host][:port number][path][filename][/extension][?query string]


http: 80 예약포트




서버 프로그램 구현하기

서블릿 : 자바의 웹 개발 표준 스펙, 스펙에 따라 만들어진 소스. 멀티 쓰레드로 실행

jsp 실행코드인 (java)서블릿의 스크립트 방식의 표준 스펙
jsp는 실행시 서블릿으로 변환되어 실행

웹 컨테이너 : 표준 규약에 따라 구현된 웹 어플리케이션을 관리하고 실행할 수 있는 소프트웨어(톰캣,resin,jboss 등)




서블릿 vs jsp

서블릿: 자바 코드 안에 html

jsp: html 문서 안에 자바코드


정리
웹의 탄생배경

URL을 통한 웹 서버에 요청/응답 과정

자바기반의 웹 프로그래밍 개요(서블릿,jsp)


서블릿

서버프로그램 + let : 작은 서버 프로그램

applet  : 어플리케이션+let : 작은 응용프로그램

j2ee의 표준스펙중 하나


자바를 사용하여 동적 웹페이지를 생성하는표준스펙
httpservlet클래스를 상속하여 작성


웹 서버 (서블렛 컨테이너 ejb 컨테이너)

웹 어플리케이션 서버 : was(jboss, IBM 웹스피어)
	서브랫 콘테이너 + ejb 컨테이너

서블랫 콘테이너 

서버를 관리할 수 있는 프로그램(서버)
요청과 응답을 통한 네트워크 서비스


Mine 
멀티펄포즈 인터넷 메일 익스텐션

전자우편을 위한 인터넷 표준 포멧

간이 전자 우편 저농 프로토콜

stmp에서는 기본적으로 7비트 기준 아스키 코드만 전송 학능.
	영어가 아닌 외국어, 특수기호,이미지,파일 전송을 위해서는 인코딩이 필요(mime)

http에서도 차용



서블릿 생성/등록

클래스 생성 http상속


메이븐 프로젝트

그룹아이디 : 해당 프로젝트를 진행하는 회사에 대한 정보 
일반적으로 회사의 도메인 역순으로 기술
naver.com = > com.name
googlelo.com => 컴점 구글

ddit.or.kr ==>그룹 아이디에 해당하는 회사에서 진행하는 프로젝트 명
google:GMAIL,GOOGLE DRIVE
version:프로젝트의 버전
	대.중.소
	3.5.2

jar: 자바 archive:클래스들을 묶어놓은 파일, 압출파일 

class html jsp images, css, 자바스크립트
war : web ARchive: 웹 프로그램을 뭒어 놓은 파일
tomcat의 webapps 폴더에 war 파일을 복사 해놓고 톰캣을 기동하면
war 파일을 톰캣이 자동으로 압출을 해재하여 웹 어플리케이션이 서비스 되도록 한다.

.........................



webapp 에 파일 있어야.. 메이븐 프로젝트

컨트롤 쉬프트 t  하면오픈 타입 열수 있음.

String


쉬프트 r은 리소스

알트 쉬프트 제이 - 주석

code tem 검색하여 미리 정의되있는 변수 바꿔서 주석 생성 가능


새 단축어 만들기 자바의 템플릿스
gwt
커서항목


logger <<


pom :프로젝트 오브젝트 모델 프로젝트에 대학 설정 정보
	해당 프로젝트를 만든 회사
	프로젝트 이름
	프로젝트의 버전
	프로젝트에서 필요로 하는 의존성(dependency) - 라이브러리(ojdbc6.jar)
pom.xml


컨트롤 쉬프트 r    <<<---파일찾기