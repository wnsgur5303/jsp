jsp 표준 구성 요소를 이용한 프로그래밍


strings send by the client to servlet container as part of its request

client가 서버로 요청하면서 보낸 문자열

로그인시: 사용자,id,password
글 작성시 : 글 제목, 글 내용
조회시 필요한 값들 (게시판 구분, 게시판 페이지 번호)

필요한 구성요소
--
파라미터
클라이언트가 서버로 요청을 보낼시 같이 보내는 추가적인 정보
ex: 로그인시 사용자 id, password
	로그인 작성시 게시글 제목, 게시글 내용
	게시판 게시글 조회시 페이지 번호, 페이지 사이즈, 검색어

파라미터를 보내는 방법
http method 에 따라 두가지로 분리
GET : 파라미터를 url에 붙여서 전송
	==>파라미터가 웹브라우저 주소줄에 노출 (보안취약)

POST: http body 영역에 기록하여 전송
	==>웹브라우저 주소줄에 노출되지 않음
		개발자 도구를 이용하면 보는게 가능

HTTP프로토콜에서 데이터를 주고 받는 방식
HTTP (Request,Response ) MESSAGE라는 정해진 포맷으로 전송
형식은 3가지 항목으로 구분
1.Request Line : 요청 메소드(get, post), url(get 방식일경우 파라미터가 이곳에 표기), http 버전
2.Request Header : 헤더 정보(브라우저, os정보 , local,content-type....)
3.request body : 파라미터 기록(GET 방식은 파라미터가 body에 담기지 않음)

login.jsp
form tag를 이용하여 파라미터와 같이 서버로 요청을 보낼시 주의사항
1.<form>태그 기술, 전송을 통해 보낼 파라미터들을 폼 태그의 하위 
input태그를 기술(name 속성이 반드시 존재해야함
name속성이 파라미터 이름이 된다
value 속성이 해당 파라미터의 값이 된다.)

2.form 태그의 action 속성을 지정해야 한다.
(action : 요청 보낼 서버의 자원(서블릿,jsp))

3.form 태그의 method속성
 전송할 HTTP method 방식
 form 태그를 이용하여 전송시 GET ,POST 두가지 방식만 가능
 명시 하지 않을 경우 기본 값인 GET 메소드가 적용된다. 

loginController 생성 kr.or.ddit.login.web.LoginController.java
TIP. Jquery에서 제공하는 serialize() 함수를 통해 전송될 파라미터를 미리 알수가 있다.


request객체를 통해 parameter를 받는 방법

1.하나의 파라미터로 여러개의 값이 전송 될 수 있음.
2.java servlet 표준 스펙에서는 파라미터 맵객체를 통해 관리

	Map<String, String[]>
	파라미터 이름이 map의 key가 되고 파라미터의 값들이 map의 value가 된다.

3.request 객체를 통해 파라미터를 조회 할수는 있찌만,
신규로 추가하거나 변경 할수는 없다 ==> wrapper 클래스를 이용하여 비슷한 효과를 만들어 낼 수는 있음(filter학습시 진행)

request 객체에서 제공하는 파라미터 관련 메소드
1.getParameter(String parameterName) : 파라미터이름에 해당하는 파라미터 값을 조회
단,파라미터 값이 여러개가 존재할 경우 가장 첫번째 값을 반환

2.String[] getParameterValues(String parameterName) : 파라미터이름에 해당하는 모든 파라미터 값을 문자열 배열로 반환

3.Enumeration<String> getParameterNames() : 해당 요청에 포함되어 있는 파라미터 이름 조회

4.Map<Stringm,String[]> getParameterMap() : 요청 파라미터가 담긴 맵을 반환


web.xml에 요청하는 서블릿,서블릿-mapping을 어노테이션을 통해 설정하는 방법

서버가 기동이된 상태에서 새로운 서블릿을 생성할 경우 해당 서블릿을 서버에 인식을 하지 못함 ==>재기동을 반드시 해야함
서버 기동시 로딩된 서블릿의 경우 수정을 하면 서버가 수정 내역을 리로드 하면서 바로 반영됨==> 재기동 필요 없음
web.xml 혹은 server 설정정보를 수정한 경우 수정 내역을 반영하기 위해 -==>재기동이 반드시 필요

화면안에서 f12에서 esc눌러서 나오는 콘솔로 디버깅 가능
$("form").serialize() 사용해서 폼 보내봤었다.

HttpServletResponse
서버가 클라이언트로 보내는 응답에 포함되는 정보를 캡슐화 (은닉화)하여 보관하는 객체
client 에게 요청처리를 전달하는 객체

redirect : 요청한 리소스가 다른 주소로 이동 했으니까 이동된 주수로 다시 요청을 해라
	F5눌렀을 때 중복 요청으로 인해 발생하는 문제를 막기 위해 사용

ajax,액셀 다운로드 는 꼭 알아둬야함
엑셀 파일 다운로드

1.jsp로 액셀 파일을 만들어 내는 형태 (xls 포맷만 가능)-> 파일에 들어가는내용이 많아지면 문제발생가능성 있음
2.라이브러리 활용 (apache - poi : 액셀파일을 조회, 생성) ==> 손이 많이 가는 형태

content-type=  application/vnd.ms-excel 
액샐파일 만들기----


응답생성

모델 1 =jsp에서 생성,접수 둘다
모델 2 = 서블릿에서 요청 접수하고 요청생성은 jsp에서 이루어짐

앞으로 실행할때 직접 실행하는거 지양해야함
역활을 나누어서 하는게 좋다.